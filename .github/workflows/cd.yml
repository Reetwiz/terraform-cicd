# .github/workflows/cd.yml
name: 'Terraform CD'

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  create-release:
    name: 'Create Release Artifact'
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.get_version.outputs.new_version }}
      
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Install semver tool'
        run: |
          wget -q -O /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          chmod +x /usr/local/bin/semver

      - name: 'Get and Calculate New Version'
        id: get_version
        run: |
          last_version=$(git tag --sort=-version:refname | head -n1)
          if [ -z "$last_version" ]; then
            last_version="v0.0.0"
          fi
          last_version_no_v=${last_version#v}
          commit_message="${{ github.event.head_commit.message }}"
          if [[ "$commit_message" =~ ^major || "$commit_message" =~ BREAKING[ -]CHANGE: ]]; then
            new_version=$(semver bump major $last_version_no_v)
          elif [[ "$commit_message" =~ ^feat ]]; then
            new_version=$(semver bump minor $last_version_no_v)
          else
            new_version=$(semver bump patch $last_version_no_v)
          fi
          echo "new_version=v$new_version" >> $GITHUB_OUTPUT
          echo "New version calculated: v$new_version"

      - name: 'Build Production Artifact'
        run: zip -r prod-release-artifact.zip *.tf modules/
          
      - name: 'Create GitHub Release and Tag'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.new_version }}
          name: "Release ${{ steps.get_version.outputs.new_version }}"
          body: "Automated release based on merge to main."
          files: "prod-release-artifact.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-s3:
    name: 'Publish Artifact to S3'
    runs-on: ubuntu-latest
    needs: create-release
    environment:
      name: production
    
    steps:
      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: 'Download Release Asset'
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: ${{ github.repository }}
          version: "tags/${{ needs.create-release.outputs.release_version }}"
          file: 'prod-release-artifact.zip'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Upload Artifact to S3'
        uses: aws-actions/aws-s3-upload@v2
        with:
          aws-bucket-name: 'reetwiz-artifact'
          source: 'prod-release-artifact.zip'
          destination: 'releases/${{ needs.create-release.outputs.release_version }}/prod-release-artifact.zip'